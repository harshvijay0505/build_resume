{"ast":null,"code":"var _jsxFileName = \"/Users/harsh/Documents/toddle_resume/src/components/ToppaneRecord.js\",\n    _s = $RefreshSig$();\n\nimport { Avatar, Button } from '@mui/material';\nimport { grey } from '@mui/material/colors';\nimport React, { useState } from 'react';\nimport ImageUpload from './ImageUpload';\nimport { useUser } from '../context/CodeContext';\nimport './ZLayout.css';\nimport Names from './TopPane';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst ToppaneRecord = () => {\n  _s();\n\n  const {\n    userName,\n    userEmail,\n    userBio\n  } = useUser();\n  const [flag, setFlag] = useState(false);\n\n  const handleClick = () => {\n    setFlag(true);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: flag ? /*#__PURE__*/_jsxDEV(Names, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"container\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"leftpane\",\n            children: /*#__PURE__*/_jsxDEV(Avatar, {\n              sx: {\n                bgcolor: grey,\n                height: '200px',\n                width: '200px'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 24,\n              columnNumber: 5\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 5\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"middlepane-output\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"nameContainer\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"name-output\",\n                children: userName ? userName : \"Your Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 30,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"email-output\",\n                children: userEmail ? userEmail : \"xyz@gmail.com\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 31,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"bio-output\",\n                children: userBio ? userBio : \"The short bio might be small in size, but it’s large in content. The best situations for having a short bio ready include speaking engagements, company websites, company walls where your picture hangs, or any situation where time is of the essence. \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 32,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                style: {\n                  textTransform: 'none',\n                  width: '5%'\n                },\n                variant: \"outlined\",\n                onClick: handleClick,\n                children: \"Edit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 33,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 29,\n              columnNumber: 9\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 5\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 1\n      }, this)\n    }, void 0, false)\n  }, void 0, false);\n};\n\n_s(ToppaneRecord, \"bUMCP+m04+vrCby+3V9Bu+GB8ow=\", false, function () {\n  return [useUser];\n});\n\n_c = ToppaneRecord;\nexport default ToppaneRecord;\n\nvar _c;\n\n$RefreshReg$(_c, \"ToppaneRecord\");","map":{"version":3,"names":["Avatar","Button","grey","React","useState","ImageUpload","useUser","Names","ToppaneRecord","userName","userEmail","userBio","flag","setFlag","handleClick","bgcolor","height","width","textTransform"],"sources":["/Users/harsh/Documents/toddle_resume/src/components/ToppaneRecord.js"],"sourcesContent":["import { Avatar, Button } from '@mui/material'\nimport { grey } from '@mui/material/colors'\nimport React, { useState } from 'react'\nimport ImageUpload from './ImageUpload';\nimport { useUser } from '../context/CodeContext';\nimport './ZLayout.css';\nimport Names from './TopPane';\n\nconst ToppaneRecord = () => {\n  const {userName,userEmail,userBio}=useUser()\n  const[flag,setFlag]=useState(false)\n\n  const handleClick = () => {\n    setFlag(true)\n}\n\nreturn (\n<> \n{flag?<Names/>:<>\n<div>\n        <div className='container'>\n    <div className='leftpane'>\n        \n    <Avatar sx={{ bgcolor: grey , height: '200px', width: '200px' }}/>       \n        \n\n    </div>\n    <div className='middlepane-output'>\n        <div className='nameContainer'>\n                <label className='name-output'>{userName?userName:\"Your Name\"}</label>\n                <label className='email-output'>{userEmail?userEmail:\"xyz@gmail.com\"}</label>\n                <label className='bio-output' >{userBio?userBio:\"The short bio might be small in size, but it’s large in content. The best situations for having a short bio ready include speaking engagements, company websites, company walls where your picture hangs, or any situation where time is of the essence. \"}</label>\n                <Button style={{textTransform: 'none', width:'5%'}} variant=\"outlined\" onClick={handleClick}>Edit</Button>\n\n                </div>\n                \n        </div>\n        \n    </div> \n    \n    </div></>}</>\n  )\n}\n\nexport default ToppaneRecord"],"mappings":";;;AAAA,SAASA,MAAT,EAAiBC,MAAjB,QAA+B,eAA/B;AACA,SAASC,IAAT,QAAqB,sBAArB;AACA,OAAOC,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,SAASC,OAAT,QAAwB,wBAAxB;AACA,OAAO,eAAP;AACA,OAAOC,KAAP,MAAkB,WAAlB;;;;AAEA,MAAMC,aAAa,GAAG,MAAM;EAAA;;EAC1B,MAAM;IAACC,QAAD;IAAUC,SAAV;IAAoBC;EAApB,IAA6BL,OAAO,EAA1C;EACA,MAAK,CAACM,IAAD,EAAMC,OAAN,IAAeT,QAAQ,CAAC,KAAD,CAA5B;;EAEA,MAAMU,WAAW,GAAG,MAAM;IACxBD,OAAO,CAAC,IAAD,CAAP;EACH,CAFC;;EAIF,oBACA;IAAA,UACCD,IAAI,gBAAC,QAAC,KAAD;MAAA;MAAA;MAAA;IAAA,QAAD,gBAAU;MAAA,uBACf;QAAA,uBACQ;UAAK,SAAS,EAAC,WAAf;UAAA,wBACJ;YAAK,SAAS,EAAC,UAAf;YAAA,uBAEA,QAAC,MAAD;cAAQ,EAAE,EAAE;gBAAEG,OAAO,EAAEb,IAAX;gBAAkBc,MAAM,EAAE,OAA1B;gBAAmCC,KAAK,EAAE;cAA1C;YAAZ;cAAA;cAAA;cAAA;YAAA;UAFA;YAAA;YAAA;YAAA;UAAA,QADI,eAOJ;YAAK,SAAS,EAAC,mBAAf;YAAA,uBACI;cAAK,SAAS,EAAC,eAAf;cAAA,wBACQ;gBAAO,SAAS,EAAC,aAAjB;gBAAA,UAAgCR,QAAQ,GAACA,QAAD,GAAU;cAAlD;gBAAA;gBAAA;gBAAA;cAAA,QADR,eAEQ;gBAAO,SAAS,EAAC,cAAjB;gBAAA,UAAiCC,SAAS,GAACA,SAAD,GAAW;cAArD;gBAAA;gBAAA;gBAAA;cAAA,QAFR,eAGQ;gBAAO,SAAS,EAAC,YAAjB;gBAAA,UAAgCC,OAAO,GAACA,OAAD,GAAS;cAAhD;gBAAA;gBAAA;gBAAA;cAAA,QAHR,eAIQ,QAAC,MAAD;gBAAQ,KAAK,EAAE;kBAACO,aAAa,EAAE,MAAhB;kBAAwBD,KAAK,EAAC;gBAA9B,CAAf;gBAAoD,OAAO,EAAC,UAA5D;gBAAuE,OAAO,EAAEH,WAAhF;gBAAA;cAAA;gBAAA;gBAAA;gBAAA;cAAA,QAJR;YAAA;cAAA;cAAA;cAAA;YAAA;UADJ;YAAA;YAAA;YAAA;UAAA,QAPI;QAAA;UAAA;UAAA;UAAA;QAAA;MADR;QAAA;QAAA;QAAA;MAAA;IADe;EADf,iBADA;AA0BC,CAlCD;;GAAMN,a;UAC+BF,O;;;KAD/BE,a;AAoCN,eAAeA,aAAf"},"metadata":{},"sourceType":"module"}